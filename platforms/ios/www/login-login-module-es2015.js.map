{"version":3,"sources":["./src/app/login/login.page.html","./src/app/User.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts","./src/app/services/auth.service.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["export default \"<ion-content>\\n    <div *ngIf=\\\"isAccountExist && !isNeedNewPassword\\\" style=\\\"display: flex; align-items: center; align-content: center; justify-content: center;\\n   flex-direction: column; margin-top: 50%;--ion-background-color: transparent \\\">\\n        <ion-list>\\n            <form [formGroup]=\\\"signInValidator\\\">\\n                <ion-item>\\n                    <ion-label>\\n                        <ion-icon name=\\\"mail-outline\\\"></ion-icon>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"user.email\\\"\\n                               type=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>\\n                        <ion-icon name=\\\"person\\\"></ion-icon>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"username\\\" placeholder=\\\"User name\\\" [(ngModel)]=\\\"user.username\\\"\\n                               type=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>\\n                        <ion-icon name=\\\"key-outline\\\"></ion-icon>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\"\\n                               type=\\\"password\\\"></ion-input>\\n                </ion-item>\\n                <div style=\\\"display: flex; align-items: center; align-content: center;flex-direction: column\\\">\\n                    <ion-button [disabled]=\\\"!signInValidator.valid\\\" color=\\\"success\\\" shape=\\\"round\\\" (click)=\\\"onSubmitSignIn()\\\">\\n                        Sign in\\n                    </ion-button>\\n                </div>\\n                <div style=\\\"display: flex; align-items: center; align-content: center; flex-direction: column\\\">\\n                    <a (click)=\\\"onForgetPassword()\\\">Forget password?</a>\\n                    <a (click)=\\\"isAccountExist = !isAccountExist\\\">Create Account</a>\\n                </div>\\n            </form>\\n        </ion-list>\\n    </div>\\n    <div *ngIf=\\\"!isAccountExist && !isNeedNewPassword\\\" style=\\\"display: flex; align-items: center; align-content: center; justify-content: center;\\n   flex-direction: column; margin-top: 50%;--ion-background-color: transparent \\\">\\n        <ion-list>\\n            <form [formGroup]=\\\"createAccountValidator\\\">\\n                <ion-item>\\n                    <ion-label>\\n                        <ion-icon name=\\\"mail-outline\\\"></ion-icon>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"user.email\\\"\\n                               type=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>\\n                        <ion-icon name=\\\"person\\\"></ion-icon>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"username\\\" placeholder=\\\"User name\\\" [(ngModel)]=\\\"user.username\\\"\\n                               type=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>\\n                        <ion-icon name=\\\"key-outline\\\"></ion-icon>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\"\\n                               type=\\\"password\\\"></ion-input>\\n                </ion-item>\\n                <div style=\\\"display: flex; align-items: center; align-content: center; justify-content: center\\\">\\n                    <ion-button [disabled]=\\\"!createAccountValidator.valid\\\" color=\\\"success\\\" shape=\\\"round\\\"\\n                                (click)=\\\"onSubmitCreateAccount()\\\">Create Account\\n                    </ion-button>\\n                    <a (click)=\\\"isAccountExist = !isAccountExist\\\">Sign In</a>\\n                </div>\\n            </form>\\n        </ion-list>\\n    </div>\\n    <div *ngIf=\\\"isNeedNewPassword\\\" style=\\\"display: flex; align-items: center; align-content: center; justify-content: center;\\n   flex-direction: column; margin-top: 50%;--ion-background-color: transparent \\\">\\n        <ion-list>\\n            <form style=\\\"display: flex;flex-direction: column;justify-content: center;align-items: center\\\" [formGroup]=\\\"forgetPasswordValidator\\\">\\n                <ion-item>\\n                    <ion-label>\\n                        <ion-icon name=\\\"mail-outline\\\"></ion-icon>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"user.email\\\"\\n                               type=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>\\n                        <ion-icon name=\\\"person\\\"></ion-icon>\\n                    </ion-label>\\n                    <ion-input formControlName=\\\"userName\\\" placeholder=\\\"User name\\\" [(ngModel)]=\\\"user.username\\\"\\n                               type=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <form >\\n                    <ion-button [disabled]=\\\"!forgetPasswordValidator.valid\\\" color=\\\"success\\\" shape=\\\"round\\\"\\n                                (click)=\\\"sendPasswordForget()\\\">Send password\\n                    </ion-button>\\n                </form>\\n                    <a (click)=\\\"isNeedNewPassword = !isNeedNewPassword\\\">Sign In</a>\\n            </form>\\n        </ion-list>\\n    </div>\\n</ion-content>\\n\";","export class User {\n    public id: number;\n    public email: string;\n    public password: string;\n    public pseudo: string;\n    public authError: boolean;\n    public familyMembers: [];\n    public role: string;\n    public isActive: boolean;\n    public username: string;\n\n    constructor(email?: string,\n                password?: string,\n                authError?: boolean,\n                pseudo?: string,\n                id?: number,\n                isActive?: boolean,\n                username?: string,\n                role?: string\n                ) {\n        this.email = email;\n        this.username = username;\n        this.password = password;\n        this.pseudo = pseudo;\n        this.id = id;\n        this.authError = authError;\n        this.role = role;\n        this.isActive = isActive\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        LoginPageRoutingModule,\n        ReactiveFormsModule,\n\n    ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {User} from '../User';\nimport {UserService} from '../services/user.service';\nimport {LoadingController, ToastController} from '@ionic/angular';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {AuthGuardService} from '../services/auth-guard.service';\nimport { AuthService } from '../services/auth.service';\nimport { TokenStorageService } from '../services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n    user: User = new User(\"\", \"\",true);\n    isAccountExist: boolean = true;\n    isNeedNewPassword: boolean = false;\n    signInValidator: any;\n    createAccountValidator: any;\n    forgetPasswordValidator: any;\n    private isLoading: boolean = false;\n\n    form: any = {};\n    isLoggedIn = false;\n    isLoginFailed = false;\n    errorMessage = '';\n    roles: string[] = [];\n\n    isSuccessful = false;\n    isSignUpFailed = false;\n\n    constructor(private router: Router,\n                private userService: UserService,\n                private formBuilder: FormBuilder,\n                private toastController: ToastController,\n                private authGuardService: AuthGuardService,\n                public loadingController: LoadingController,\n                private authService: AuthService, private tokenStorage: TokenStorageService) {\n\n        this.signInValidator = this.formBuilder.group({\n            email: ['', Validators.required],\n            password: ['', Validators.required],\n            username: ['', Validators.required],\n        }),\n            this.createAccountValidator = this.formBuilder.group({\n                email: ['', Validators.required],\n                password: ['', Validators.required],\n                username: ['', Validators.required],\n            }),\n            this.forgetPasswordValidator = this.formBuilder.group({\n                email: ['', Validators.required],\n                username: ['', Validators.required],\n            })\n    }\n\n    ngOnInit() {\n        if (this.tokenStorage.getToken()) {\n            this.isLoggedIn = true;\n            this.roles = this.tokenStorage.getUser().roles;\n        }\n\n    }\n\n    onSubmitCreateAccount() {\n        this.present();\n        console.log(this.user);\n        const subscription = this.authService.register(this.user).subscribe(\n            data => {\n                console.log(data);\n                this.isSuccessful = true;\n                this.isSignUpFailed = false;\n            },\n            err => {\n                this.presentToast(err.error.message, 2000)\n                this.errorMessage = err.error.message;\n                this.isSignUpFailed = true;\n                this.dismiss();\n                subscription.unsubscribe();\n            },\n            () => {\n                this.presentToast('Account created, please check your Mail box', 2000),\n                    this.dismiss();\n                this.isAccountExist = !this.isAccountExist;\n                // this.onSubmitSignIn();\n                subscription.unsubscribe();\n            }\n        );\n    }\n\n    onSubmitSignIn() {\n        this.present();\n        console.log(this.user);\n       const subscription = this.authService.login(this.user).subscribe(\n            data => {\n                this.tokenStorage.saveToken(data.accessToken);\n                this.tokenStorage.saveUser(data);\n\n                this.isLoginFailed = false;\n                this.isLoggedIn = true;\n                this.roles = this.tokenStorage.getUser().roles;\n                this.signIn();\n            },\n            err => {\n                console.log(err);\n                this.presentToast(err.error.message, 2000);\n                this.errorMessage = err.error.message;\n                this.isLoginFailed = true;\n                this.dismiss();\n                subscription.unsubscribe()\n            },\n           () => {\n                this.dismiss();\n               subscription.unsubscribe();\n           }\n        );\n    }\n\n\n    signIn() {\n        let userToSignIn: User = new User();\n        userToSignIn.email = this.user.email;\n        userToSignIn.password = this.user.password;\n        userToSignIn.authError = this.user.authError;\n        this.present();\n        console.log(userToSignIn);\n        const subscription = this.userService.signIn(userToSignIn).subscribe(\n            value => {\n                this.userService.user = value\n            },\n            error => {\n                this.presentToast(error.error.message,2000),\n                this.dismiss()\n            },\n            () => {\n                this.checkIfIsConnected(this.userService.user.authError),\n                    this.dismiss();\n                subscription.unsubscribe()\n            });\n    }\n\n    createAccount() {\n        let userToLog: User = new User();\n        userToLog.email = this.user.email;\n        userToLog.password = this.user.password;\n        userToLog.pseudo = this.user.pseudo;\n        const subscription = this.userService.createAccount(userToLog).subscribe(\n            value => {this.userService.user = value,\n            console.log(value)},\n            error => {\n                this.presentToast(error.error.message,2000),\n                this.dismiss();\n            },\n            () => {\n                console.log(this.user.authError),\n                    this.checkIfIsConnected(this.userService.user.authError),\n                    this.presentToast('Account created, please check your Mail box', 2000),\n                    this.dismiss(),\n                    subscription.unsubscribe()\n            });\n    }\n\n    checkIfIsConnected(userError) {\n        if (userError === true) {\n            console.log(userError);\n            this.presentToast(\"connexion impossible probléme de mot de passe\",2000)\n            return console.log(\"connection failed\", \"je passe dans le true\");\n\n        } else {\n            console.log(this.user , \"je passe dans le false\");\n            this.authGuardService.isAuthenticated = true;\n            this.router.navigateByUrl('/home');\n            this.presentToast(\"connected\", 2000)\n            return console.log(\"connected\");\n        }\n    }\n\n    onForgetPassword() {\n        this.isNeedNewPassword = !this.isNeedNewPassword;\n    }\n\n    sendPasswordForget() {\n        let messageToast: string = \"\";\n        console.log('send password');\n        let userToGetPassword = new User();\n        userToGetPassword.email = this.user.email;\n        userToGetPassword.username = this.user.username;\n        userToGetPassword.password = this.user.username;\n        this.present();\n        const subscription = this.userService.getForgetPassword(userToGetPassword).subscribe(\n            value => {\n                messageToast = value\n            },\n            error => {\n                this.presentToast(error.error.message,2000),\n                this.dismiss();\n            },\n            () => {\n                this.presentToast(messageToast, 2000),\n                    this.isNeedNewPassword = false,\n                    this.dismiss();\n                    subscription.unsubscribe()\n            }\n        )\n    }\n\n    async presentToast(message: string, duration?: number) {\n        const toast = await this.toastController.create({\n            message: message,\n            duration: duration\n        });\n        toast.present();\n    }\n\n    async present() {\n        this.isLoading = true;\n        return await this.loadingController.create({\n            // duration: 5000,\n        }).then(a => {\n            a.present().then(() => {\n                console.log('presented');\n                if (!this.isLoading) {\n                    a.dismiss().then(() => console.log('abort presenting'));\n                }\n            });\n        });\n    }\n\n    async dismiss() {\n        this.isLoading = false;\n        return await this.loadingController.dismiss().then(() => console.log('dismissed'));\n    }\n}\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n// const AUTH_API = 'http://localhost:8082/api/auth/';\nconst AUTH_API = 'https://mask-wash-back-end.herokuapp.com/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    }, httpOptions);\n  }\n}\n"],"sourceRoot":"webpack:///"}